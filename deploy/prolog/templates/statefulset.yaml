apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prolog.fullname" .}}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ include "prolog.fullname" .}}
  serviceName: {{ include "prolog.fullname" .}}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "prolog.fullname" .}}
    spec:
      initContainers:
        - name: {{ include "prolog.fullname" .}}-config-init
          image: busybox
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |-
              ID=$(echo $HOSTNAME | rev | cut -d- -f1 | rev)
              cat > /var/run/prolog/config.yaml <<EOD
              data-dir: /var/run/prolog/data
              bootstrap: $([ $ID = 0 ] && echo true || echo false )
              rpc-port: {{.Values.rpcPort}}
              bind-addr: "$HOSTNAME.prolog.{{.Release.Namespace}}.svc.cluster.local:{{.Values.serfPort}}"
              $([ $ID != 0 ] && echo 'start-join-addrs: "prolog-0.prolog.{{.Release.Namespace}}.svc.cluster.local:{{.Values.serfPort}}"')
              EOD
          volumeMounts:
            - mountPath: /var/run/prolog
              name: datadir
      containers:
        - name: {{ include "prolog.fullname" .}}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          command:
            - /bin/proglog
            - --config-file
          args:
            - /var/run/prolog/config.yaml
          ports:
            - containerPort: {{ .Values.rpcPort}}
              name: rpc
            - containerPort: {{ .Values.serfPort}}
              name: serf
          volumeMounts:
            - mountPath: /var/run/prolog
              name:  datadir
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage }}
