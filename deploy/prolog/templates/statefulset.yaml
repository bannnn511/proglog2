apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prolog.fullname" .}}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ include "prolog.fullname" .}}
  serviceName: {{ include "prolog.fullname" .}}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "prolog.fullname" .}}
    spec:
      initContainers:
        - name: {{ include "prolog.fullname" .}}-config-init
          image: {{.Values.imageInit.repository}}
          imagePullPolicy: IfNotPresent
          command:
            - ./init.sh
            - "{{.Values.rpcPort}}"
            - {{.Release.Namespace}}
            - "{{.Values.serfPort}}"
          volumeMounts:
            - mountPath: datadir
              name: /var/run/proglog
      containers:
        - name: {{ include "prolog.fullname" .}}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.rpcPort}}
              name: rpc
            - containerPort: {{ .Values.serfPort}}
              name: serf
          volumeMounts:
            - mountPath: datadir
              name: /var/run/prolog
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storageClassName }}
        resources:
          requests:
            storage: 1Gi